# Code Generated by Sidekick is for learning and experimentation purposes only.
from azure.identity import DefaultAzureCredential
from azure.mgmt.web import WebSiteManagementClient # type: ignore
from azure.mgmt.web.models import AppServicePlan, SkuDescription, Site, SiteConfig # type: ignore

# Set your Azure subscription ID and resource details
subscription_id = 'your-subscription-id'
resource_group = 'your-resource-group'
location = 'your-location'
app_service_plan_name = 'your-app-service-plan-name'
webapp_name = 'your-webapp-name'
repository_url = 'https://github.com/riteshzode18/python-docs-hello-world'

# Authenticate using Azure SDK
credential = DefaultAzureCredential()
web_client = WebSiteManagementClient(credential, subscription_id)

# Create an App Service Plan
app_service_plan = AppServicePlan(
    location=location,
    sku=SkuDescription(
        name='B1',
        tier='Basic',
        capacity=1
    ),
    reserved=True 
)

web_client.app_service_plans.begin_create_or_update(
    resource_group_name=resource_group,
    name=app_service_plan_name,
    app_service_plan=app_service_plan
).result()

print(f'App Service Plan {app_service_plan_name} created.')

# Create a Web App
site_config = SiteConfig(
    linux_fx_version='PYTHON|3.13',
    scm_type='LocalGit'
)

web_app = Site(
    location=location,
    server_farm_id=app_service_plan_name,
    site_config=site_config
)

web_client.web_apps.begin_create_or_update(
    resource_group_name=resource_group,
    name=webapp_name,
    site_envelope=web_app
).result()

print(f'Web App {webapp_name} created.')

# Deploy from GitHub repository
web_client.web_apps.create_or_update_source_control(
    resource_group_name=resource_group,
    name=webapp_name,
    source_control={
        'repo_url': repository_url,
        'branch': 'main',
        'is_manual_integration': False
    }
)

print(f'Code from {repository_url} deployed to Web App {webapp_name}.')
