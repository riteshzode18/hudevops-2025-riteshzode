- name: Launch EC2 instance using provided environment
  hosts: localhost
  connection: local
  gather_facts: false
  tags: provisioning

  vars:
    key_name: my_key
    region: us-east-1
    instance_type: t2.micro
    image_id: ami-0f88e80871fd81e91
    vpc_subnet_id: subnet-0a92763660d97fbc0
    security_groups:
      - launch-wizard-1
    count: 1
    tag_name: test-ec2-instance
    wait_timeout: 1

  tasks:
    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: "{{ tag_name }}"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        region: "{{ region }}"
        wait: true
        wait_timeout: "{{ wait_timeout }}"
        count: "{{ count }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        security_groups: "{{ security_groups }}"
        tags:
          Name: "{{ tag_name }}"
      register: ec2

    - name: Wait for timeout before continuing
      ansible.builtin.wait_for:
        timeout: "{{ wait_timeout }}"
      delegate_to: localhost

    - name: Output the public IP address
      debug:
        msg: "Public IP: {{ ec2.instances[0].public_ip_address }}"

    - name: Add the new EC2 instance to Ansible inventory
      add_host:
        name: "{{ ec2.instances[0].public_ip_address }}"
        ansible_user: ec2-user
        ansible_ssh_private_key_file: /home/ritesh/my_key.pem
        groups: launched

    - name: Write IP to custom inventory file
      copy:
        dest: "/etc/ansible/hosts" # path must be updated
        content: |
          [launched]
          {{ ec2.instances[0].public_ip_address }} ansible_user=ec2-user ansible_ssh_private_key_file=/home/ritesh/my_key.pem

          
