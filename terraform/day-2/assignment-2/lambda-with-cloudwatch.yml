AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template to deploy an AWS Lambda function that logs input data to CloudWatch Logs.

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaCloudWatchLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"

  LogInputFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "log-input-function-${AWS::StackName}"
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Timeout: 10
      Code:
        ZipFile: |
          import json
          import logging

          logger = logging.getLogger()
          logger.setLevel(logging.INFO)

          def handler(event, context):
              logger.info("Received event: %s", json.dumps(event))
              return {
                  'statusCode': 200,
                  'body': json.dumps('Event logged')
              }

Outputs:
  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref LogInputFunction
  LambdaExecutionRoleArn:
    Description: Execution role ARN for the Lambda function
    Value: !GetAtt LambdaExecutionRole.Arn